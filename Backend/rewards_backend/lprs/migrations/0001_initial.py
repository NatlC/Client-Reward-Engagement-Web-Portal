# Generated by Django 4.2.16 on 2024-11-13 04:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminAccess',
            fields=[
                ('admin_id', models.IntegerField(primary_key=True, serialize=False)),
                ('access_time', models.DateTimeField(blank=True, null=True)),
                ('report_type', models.CharField(blank=True, max_length=19, null=True)),
            ],
            options={
                'db_table': 'admin_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('analytics_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_engagement_score', models.FloatField(blank=True, null=True)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('sustainability_engagement', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analytics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientEngagement',
            fields=[
                ('engagement_id', models.AutoField(primary_key=True, serialize=False)),
                ('participation_type', models.CharField(blank=True, max_length=19, null=True)),
                ('participation_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client_engagement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exclusiveproductreward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'exclusiveproductreward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_submitted', models.DateField()),
                ('service_rating', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('sustainability_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Percentdiscountreward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(db_column='Percent', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'percentdiscountreward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pricediscountreward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'pricediscountreward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('product_id', models.AutoField(db_column='Product_ID', primary_key=True, serialize=False)),
                ('productname', models.CharField(db_column='ProductName', max_length=25)),
                ('image', models.CharField(blank=True, db_column='Image', max_length=500, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('sustainability_level', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
                ('exclusive', models.IntegerField(db_column='Exclusive')),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productupgradereward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'productupgradereward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramSuccess',
            fields=[
                ('program_id', models.AutoField(primary_key=True, serialize=False)),
                ('loyalty_effectiveness', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('engagement_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('evaluation_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'program_success',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rewards',
            fields=[
                ('reward_id', models.AutoField(db_column='Reward_ID', primary_key=True, serialize=False)),
                ('type', models.IntegerField(db_column='Type')),
                ('points', models.IntegerField(db_column='Points')),
                ('start', models.DateTimeField(db_column='Start')),
                ('end', models.DateTimeField(blank=True, db_column='End', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=255, null=True)),
                ('image', models.CharField(blank=True, db_column='Image', max_length=500, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'rewards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rewardtransaction',
            fields=[
                ('transaction_id', models.AutoField(db_column='Transaction_ID', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(db_column='Date')),
            ],
            options={
                'db_table': 'rewardtransaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupportTickets',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_status', models.CharField(blank=True, max_length=15, null=True)),
                ('ticket_start_date', models.DateField(blank=True, null=True)),
                ('ticket_end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'support_tickets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Surveyresponses',
            fields=[
                ('response_id', models.AutoField(primary_key=True, serialize=False)),
                ('response_date', models.DateField()),
                ('content', models.TextField(blank=True, null=True)),
                ('initiative_engagement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('points_earned', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'surveyresponses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Surveys',
            fields=[
                ('survey_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'surveys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(db_column='User_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=100)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('passwordhash', models.CharField(db_column='PasswordHash', max_length=255)),
                ('firstname', models.CharField(db_column='Firstname', max_length=100)),
                ('lastname', models.CharField(db_column='Lastname', max_length=100)),
                ('role', models.CharField(db_column='Role', max_length=50)),
                ('points', models.IntegerField(blank=True, db_column='Points', null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerStats',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='lprs.users')),
                ('loyalty_points', models.IntegerField(blank=True, null=True)),
                ('reward_transactions', models.IntegerField(blank=True, null=True)),
                ('product_purchases', models.IntegerField(blank=True, null=True)),
                ('initiative_points', models.IntegerField(blank=True, null=True)),
                ('campaign_points', models.IntegerField(blank=True, null=True)),
                ('survey_points', models.IntegerField(blank=True, null=True)),
                ('education_engagement', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'customer_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupportPerformance',
            fields=[
                ('ticket', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='lprs.supporttickets')),
                ('response_time', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('resolution_time', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('resolution_effectiveness', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('customer_satisfaction', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'support_performance',
                'managed': False,
            },
        ),
    ]
